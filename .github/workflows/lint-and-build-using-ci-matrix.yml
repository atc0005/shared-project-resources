# Copyright 2022 Adam Chalkley
#
# https://github.com/atc0005/shared-project-resources
#
# Licensed under the MIT License. See LICENSE file in the project root for
# full license information.

on:
  workflow_call:

jobs:
  lint_code:
    name: Lint codebase
    runs-on: ubuntu-latest
    timeout-minutes: 10
    # Don't flag the whole workflow as failed if "experimental" matrix jobs
    # fail. This allows the unstable image linting tasks to fail without
    # marking the oldstable and stable image linting jobs as failed.
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      # Don't stop all workflow jobs if the unstable image linting tasks fail.
      fail-fast: false
      matrix:
        container-image: ["go-ci-oldstable", "go-ci-stable"]
        experimental: [false]
        include:
          - container-image: "go-ci-unstable"
            experimental: true
    container:
      image: "ghcr.io/atc0005/go-ci:${{ matrix.container-image}}"

    steps:
      - name: Check out code
        uses: actions/checkout@v3.3.0

      # Mark the current working directory as a safe directory in git to
      # resolve "dubious ownership" complaints.
      #
      # https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
      # https://confluence.atlassian.com/bbkb/git-command-returns-fatal-error-about-the-repository-being-owned-by-someone-else-1167744132.html
      # https://github.com/actions/runner-images/issues/6775
      # https://github.com/actions/checkout/issues/766
      - name: Mark the current working directory as a safe directory in git
        # run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
        run: git config --global --add safe.directory "${PWD}"

      - name: Remove repo-provided golangci-lint config file
        run: |
          # Remove the copy of the config file bundled with the repo/code so
          # that the configuration provided by the atc0005/go-ci project is
          # used instead
          rm -vf .golangci.yml

      - name: Run golangci-lint using container-provided config file settings
        run: |
          golangci-lint --version
          golangci-lint run

      # This is the very latest stable version of staticcheck provided by the
      # atc0005/go-ci container. The version included with golangci-lint often
      # lags behind the official stable releases.
      - name: Run staticcheck
        run: |
          staticcheck --version
          staticcheck $(go list -mod=vendor ./... | grep -v /vendor/)

  test_code:
    name: Run tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    # Don't flag the whole workflow as failed if "experimental" matrix jobs
    # fail. This allows unstable image tests to fail without marking the
    # oldstable and stable image jobs as failed.
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      # Don't stop all workflow jobs if the unstable image tests fail.
      fail-fast: false
      matrix:
        container-image: ["go-ci-oldstable", "go-ci-stable"]
        experimental: [false]
        include:
          - container-image: "go-ci-unstable"
            experimental: true
    container:
      image: "ghcr.io/atc0005/go-ci:${{ matrix.container-image}}"

    steps:
      - name: Check out code
        uses: actions/checkout@v3.3.0

      # Mark the current working directory as a safe directory in git to
      # resolve "dubious ownership" complaints.
      #
      # https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
      # https://confluence.atlassian.com/bbkb/git-command-returns-fatal-error-about-the-repository-being-owned-by-someone-else-1167744132.html
      # https://github.com/actions/runner-images/issues/6775
      # https://github.com/actions/checkout/issues/766
      - name: Mark the current working directory as a safe directory in git
        # run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
        run: git config --global --add safe.directory "${PWD}"

      - name: Run all tests
        run: go test -mod=vendor -v ./...

  build_code:
    name: Build codebase
    runs-on: ubuntu-latest
    # Default: 360 minutes
    timeout-minutes: 10
    # Don't flag the whole workflow as failed if "experimental" matrix jobs
    # fail. This allows unstable image build tasks to fail without marking the
    # oldstable and stable image jobs as failed.
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      # Don't stop all workflow jobs if the unstable image build tasks fail.
      fail-fast: false
      matrix:
        container-image: ["go-ci-oldstable", "go-ci-stable"]
        experimental: [false]
        include:
          - container-image: "go-ci-unstable"
            experimental: true
    container:
      image: "ghcr.io/atc0005/go-ci:${{ matrix.container-image}}"

    steps:
      - name: Print go version
        run: go version

      - name: Check out code
        uses: actions/checkout@v3.3.0

      # Mark the current working directory as a safe directory in git to
      # resolve "dubious ownership" complaints.
      #
      # https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
      # https://confluence.atlassian.com/bbkb/git-command-returns-fatal-error-about-the-repository-being-owned-by-someone-else-1167744132.html
      # https://github.com/actions/runner-images/issues/6775
      # https://github.com/actions/checkout/issues/766
      - name: Mark the current working directory as a safe directory in git
        # run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
        run: git config --global --add safe.directory "${PWD}"

      - name: Build using vendored dependencies
        # NOTE: This will fail if there is a doc.go file in the project root
        # with a message similar to:
        #
        # # github.com/atc0005/check-cert
        # runtime.main_mainÂ·f: function main is undeclared in the main package
        run: go build -v -mod=vendor ./...
