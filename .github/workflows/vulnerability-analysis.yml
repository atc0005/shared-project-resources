# Copyright 2022 Adam Chalkley
#
# https://github.com/atc0005/shared-project-resources
#
# Licensed under the MIT License. See LICENSE file in the project root for
# full license information.

on:
  workflow_call:
    inputs:
      os-dependencies:
        required: false
        type: string
      default-repo:
        required: false
        type: string
        default: origin
      primary-branch:
        required: false
        type: string
        default: master
      development-branch:
        required: false
        type: string
        default: development
      fetch-depth:
        required: false
        type: number
        default: 50

jobs:
  # https://stackoverflow.com/questions/76151411/use-github-actions-to-check-if-branch-is-up-to-date-with-main
  # https://stackoverflow.com/a/76151412/903870
  # https://github.com/atc0005/shared-project-resources/issues/135
  assert_pr_branch_is_ahead_of_primary_branch:
    name: Assert PR branch is ahead
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Assert source branches are set
        run: |
          abort="false"
          if [[ "${{ format('{0}/{1}', inputs.default-repo, inputs.primary-branch) }}" == "/" ]] ; then \
            echo "default repo and primary branch values not set!"; abort="true"; fi

          if [[ "${{ format('{0}/{1}', inputs.default-repo, inputs.development-branch) }}" == "/" ]] ; then \
            echo "default repo and development branch values not set!"; abort="true"; fi

          if [[ "$abort" == "true" ]]; then exit 1; fi

          echo "Primary branch: ${{ format('{0}/{1}', inputs.default-repo, inputs.primary-branch) }}"
          echo "Development branch: ${{ format('{0}/{1}', inputs.default-repo, inputs.development-branch) }}"

      - name: Check out code (subset)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: ${{ inputs.fetch-depth }}

      - name: Fetch additional references
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          git fetch origin ${{ inputs.primary-branch }} --depth ${{ inputs.fetch-depth }}

          # Allow fetch attempts for ${{ inputs.development-branch }} to fail
          git fetch origin ${{ inputs.development-branch }} --depth ${{ inputs.fetch-depth }} || true

      - name: Assert PR branch is ahead of acceptable source branches
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          if ! (git merge-base --is-ancestor ${{ format('{0}/{1}', inputs.default-repo, inputs.primary-branch) }} ${{ github.event.pull_request.head.sha }} || \
            git merge-base --is-ancestor ${{ format('{0}/{1}', inputs.default-repo, inputs.development-branch) }} ${{ github.event.pull_request.head.sha }});
          then echo "This branch is not up to date with ${{ inputs.primary-branch }} or ${{ inputs.development-branch }} branches!";
          exit 1; fi

  govulncheck:
    needs: assert_pr_branch_is_ahead_of_primary_branch
    # https://pkg.go.dev/golang.org/x/vuln/cmd/govulncheck
    # https://github.com/golang/vuln
    # https://github.com/atc0005/go-ci/issues/734
    name: govulncheck
    runs-on: ubuntu-latest
    timeout-minutes: 10
    container:
      # NOTE: govulncheck is bundled within this image
      image: "ghcr.io/atc0005/go-ci:go-ci-stable"

    steps:
      - name: Check out code
        uses: actions/checkout@v5.0.0

      # Mark the current working directory as a safe directory in git to
      # resolve "dubious ownership" complaints.
      #
      # https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
      # https://confluence.atlassian.com/bbkb/git-command-returns-fatal-error-about-the-repository-being-owned-by-someone-else-1167744132.html
      # https://github.com/actions/runner-images/issues/6775
      # https://github.com/actions/checkout/issues/766
      - name: Mark the current working directory as a safe directory in git
        # run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
        run: git config --global --add safe.directory "${PWD}"

      - name: Install Ubuntu packages (custom set)
        if: ${{ inputs.os-dependencies != '' }}
        run: apt-get update && apt-get install -y --no-install-recommends ${{ inputs.os-dependencies }}

      - name: Analyze source code
        run: |
          govulncheck --version
          govulncheck -json ./...
