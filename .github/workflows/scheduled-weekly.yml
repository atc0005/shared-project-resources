# Copyright 2023 Adam Chalkley
#
# https://github.com/atc0005/shared-project-resources
#
# Licensed under the MIT License. See LICENSE file in the project root for
# full license information.

# Purpose: This importable workflow is intended to act as a wrapper or bucket
# for tasks that are run on a weekly schedule. This can be used to run jobs
# that are more intensive/expensive than would be warranted to run on every
# pull request OR jobs that should be re-run periodically due to potentially
# updated data files (e.g., vulnerability scanning).

on:
  workflow_call:
    inputs:
      default-repo:
        required: false
        type: string
        default: origin
      primary-branch:
        required: false
        type: string
        default: master
      development-branch:
        required: false
        type: string
        default: development
      fetch-depth:
        required: false
        type: number
        default: 50

jobs:
  # https://stackoverflow.com/questions/76151411/use-github-actions-to-check-if-branch-is-up-to-date-with-main
  # https://stackoverflow.com/a/76151412/903870
  # https://github.com/atc0005/shared-project-resources/issues/135
  assert_pr_branch_is_ahead_of_primary_branch:
    name: Assert PR branch is ahead
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out code (subset)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v3.6.0
        with:
          # Retrieve sufficient amount of history (along with tags) to allow
          # build tooling (e.g., go-winres, git-describe-semver) to processing
          # tags as part of asset generation tasks.
          fetch-depth: ${{ inputs.fetch-depth }}
          fetch-tags: true

      - name: Fetch additional references
        run: |
          git fetch origin ${{ inputs.primary-branch }} --depth 50
          git fetch origin ${{ inputs.development-branch }} --depth 50

      - name: Assert source branches are set
        run: |
          abort="false"
          if [[ "${{ format('{0}/{1}', inputs.default-repo, inputs.primary-branch) }}" == "/" ]] ; then \
            echo "default repo and primary branch values not set!"; abort="true"; fi

          if [[ "${{ format('{0}/{1}', inputs.default-repo, inputs.development-branch) }}" == "/" ]] ; then \
            echo "default repo and development branch values not set!"; abort="true"; fi

          if [[ "$abort" == "true" ]]; then exit 1; fi

          echo "Primary branch: ${{ format('{0}/{1}', inputs.default-repo, inputs.primary-branch) }}"
          echo "Development branch: ${{ format('{0}/{1}', inputs.default-repo, inputs.development-branch) }}"

      - name: Assert PR branch is ahead of acceptable source branches
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          if ! (git merge-base --is-ancestor ${{ format('{0}/{1}', inputs.default-repo, inputs.primary-branch) }} ${{ github.event.pull_request.head.sha }} || \
            git merge-base --is-ancestor ${{ format('{0}/{1}', inputs.default-repo, inputs.development-branch) }} ${{ github.event.pull_request.head.sha }});
          then echo "This branch is not up to date with ${{ inputs.primary-branch }} or ${{ inputs.development-branch }} branches!";
          exit 1; fi

  lint:
    needs: assert_pr_branch_is_ahead_of_primary_branch
    name: Lint
    uses: atc0005/shared-project-resources/.github/workflows/lint-project-files.yml@master

  vulnerability:
    needs: assert_pr_branch_is_ahead_of_primary_branch
    name: Vulnerability
    uses: atc0005/shared-project-resources/.github/workflows/vulnerability-analysis.yml@master

  go_mod_validation:
    needs: assert_pr_branch_is_ahead_of_primary_branch
    name: Go Module Validation
    uses: atc0005/shared-project-resources/.github/workflows/go-mod-validation.yml@master

  # dependency_updates:
  #   name: Dependency Updates
  #   uses: atc0005/shared-project-resources/.github/workflows/dependency-updates.yml@master
