# Copyright 2023 Adam Chalkley
#
# https://github.com/atc0005/shared-project-resources
#
# Licensed under the MIT License. See LICENSE file in the project root for
# full license information.

# Purpose: This importable workflow is intended to act as a wrapper or bucket
# for tasks that are run on a monthly schedule. This can be used to run jobs
# that are more intensive/expensive than would be warranted to run on every
# pull request or a more frequent (e.g., weekly) schedule.

on:
  workflow_call:
    # Default for all inputs is off/false, but overridable from the calling
    # workflow.
    inputs:
      os-dependencies:
        required: false
        type: string
      build-packages:
        required: false
        type: boolean
        default: true
      build-podman-release:
        required: false
        type: boolean
        default: true

jobs:
  # https://stackoverflow.com/questions/76151411/use-github-actions-to-check-if-branch-is-up-to-date-with-main
  # https://stackoverflow.com/a/76151412/903870
  # https://github.com/atc0005/shared-project-resources/issues/135
  assert_pr_branch_is_ahead_of_primary_branch:
    name: Assert PR branch is ahead of primary
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out code (full history)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v3.5.3
        with:
          # Full history is needed to allow listing tags via build tooling
          # (e.g., go-winres, git-describe-semver)
          fetch-depth: 0

      - name: Check if branch is ahead of master
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          if ! git merge-base --is-ancestor origin/master ${{ github.event.pull_request.head.sha }};
          then echo "This branch is not up to date with primary branch";
          exit 1; fi

  lint_and_build_using_ci_matrix:
    needs: assert_pr_branch_is_ahead_of_primary_branch
    name: CI matrix
    uses: atc0005/shared-project-resources/.github/workflows/lint-and-build-using-ci-matrix.yml@master

  lint_and_build_using_makefile:
    needs: assert_pr_branch_is_ahead_of_primary_branch
    name: Makefile
    with:
      # Pass on any values specified by the importing workflow.
      os-dependencies: ${{ inputs.os-dependencies }}

      # The `make all` recipe can be expensive, so we disable it by default
      # and enable it here as part of a scheduled monthly job.
      build-all: true
    uses: atc0005/shared-project-resources/.github/workflows/lint-and-build-using-make.yml@master

  build_packages_using_container:
    needs: assert_pr_branch_is_ahead_of_primary_branch
    name: Build packages using container
    with:
      # TODO: Override this from the calling/importing workflow if the project
      # does not support generating release assets directly (e.g., library
      # project).
      build-packages: ${{ inputs.build-packages }}
    uses: atc0005/shared-project-resources/.github/workflows/container-builds-packages.yml@master

  build_release_assets_using_container:
    needs: assert_pr_branch_is_ahead_of_primary_branch
    name: Build release assets using container
    with:
      # TODO: Override this from the calling/importing workflow if the project
      # does not support generating release assets directly (e.g., library
      # project).
      build-podman-release: ${{ inputs.build-podman-release }}
    uses: atc0005/shared-project-resources/.github/workflows/container-builds-release.yml@master
