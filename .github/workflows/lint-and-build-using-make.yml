# Copyright 2022 Adam Chalkley
#
# https://github.com/atc0005/shared-project-resources
#
# Licensed under the MIT License. See LICENSE file in the project root for
# full license information.

on:
  workflow_call:
    inputs:
      os-dependencies:
        required: false
        type: string
      build-all:
        required: false
        type: boolean

jobs:
  lint_code_with_makefile:
    name: Lint codebase using Makefile
    runs-on: ubuntu-latest
    # Default: 360 minutes
    timeout-minutes: 10
    container:
      # Use (lightly touched) mirror of current "vanilla" upstream golang image
      image: "ghcr.io/atc0005/go-ci:go-ci-stable-mirror-build"

    steps:
      - name: Print go version
        run: go version

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3.5.2

      # Mark the current working directory as a safe directory in git to
      # resolve "dubious ownership" complaints.
      #
      # https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
      # https://confluence.atlassian.com/bbkb/git-command-returns-fatal-error-about-the-repository-being-owned-by-someone-else-1167744132.html
      # https://github.com/actions/runner-images/issues/6775
      # https://github.com/actions/checkout/issues/766
      - name: Mark the current working directory as a safe directory in git
        # run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
        run: git config --global --add safe.directory "${PWD}"

      # bsdmainutils provides "column" which is used by the Makefile
      - name: Install Ubuntu packages
        run: apt-get update && apt-get install -y --no-install-recommends make gcc bsdmainutils

      - name: Install Go linting tools
        run: make lintinstall

      # NOTE: We are intentionally *not* removing the repo-provided config
      # file as this workflow is intended to emulate running the Makefile via
      # a local dev environment.
      #
      # - name: Remove repo-provided golangci-lint config file
      #   run: |
      #     # Remove the copy of the config file bundled with the repo/code so
      #     # that the configuration provided by the atc0005/go-ci project is
      #     # used instead
      #     rm -vf .golangci.yml

      - name: Run Go linting tools using project Makefile
        run: make linting

  build_code_with_makefile_quick_recipe:
    name: Build codebase using Makefile quick recipe

    # NOTE: This recipe should now exist for the majority of projects using
    # these (importable) workflows. We reverse the "it is OK to fail" setting
    # in order to surface any projects not yet updated to provide this recipe.
    continue-on-error: false

    runs-on: ubuntu-latest
    # Default: 360 minutes
    timeout-minutes: 10
    container:
      # Use (lightly touched) mirror of current "vanilla" upstream golang image
      image: "ghcr.io/atc0005/go-ci:go-ci-stable-mirror-build"

    steps:
      - name: Print go version
        run: go version

      - name: Check out code (full history)
        uses: actions/checkout@v3.5.2
        with:
          # Full history is needed to allow listing tags via build tooling
          # (e.g., go-winres, git-describe-semver)
          fetch-depth: 0

      # Mark the current working directory as a safe directory in git to
      # resolve "dubious ownership" complaints.
      #
      # https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
      # https://confluence.atlassian.com/bbkb/git-command-returns-fatal-error-about-the-repository-being-owned-by-someone-else-1167744132.html
      # https://github.com/actions/runner-images/issues/6775
      # https://github.com/actions/checkout/issues/766
      - name: Mark the current working directory as a safe directory in git
        # run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
        run: git config --global --add safe.directory "${PWD}"

      - name: Install Ubuntu packages (standard set)
        if: ${{ inputs.os-dependencies == '' }}
        # bsdmainutils provides "column" which is used by the Makefile
        run: apt-get update && apt-get install -y --no-install-recommends make gcc bsdmainutils xz-utils

      - name: Install Ubuntu packages (custom set)
        if: ${{ inputs.os-dependencies != '' }}
        run: apt-get update && apt-get install -y --no-install-recommends ${{ inputs.os-dependencies }}

      # Try to install build dependencies using the depsinstall Makefile
      # recipe but allow this step to fail without failing the whole job if
      # the recipe is not yet implemented by a project's Makefile.
      - name: Install build dependencies (try)
        run: make depsinstall
        continue-on-error: true

      - name: Build using project Makefile "quick" recipe
        run: make quick

  # The `make all` recipe can be expensive, so we disable it by default
  # and enable it only by explicit request (e.g., monthly scheduled job).
  build_code_with_makefile_all_recipe:
    name: Build codebase using Makefile all recipe
    if: ${{ inputs.build-all }}
    runs-on: ubuntu-latest
    # Default: 360 minutes
    #
    # The check-vmware project requires more time than the others, so we use
    # that projects build time as the max runtime for this workflow for all
    # projects.
    timeout-minutes: 55
    container:
      # Use (lightly touched) mirror of current "vanilla" upstream golang image
      image: "ghcr.io/atc0005/go-ci:go-ci-stable-mirror-build"

    steps:
      - name: Print go version
        run: go version

      - name: Check out code (full history)
        uses: actions/checkout@v3.5.2
        with:
          # Full history is needed to allow listing tags via build tooling
          # (e.g., go-winres, git-describe-semver)
          fetch-depth: 0

      # Mark the current working directory as a safe directory in git to
      # resolve "dubious ownership" complaints.
      #
      # https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
      # https://confluence.atlassian.com/bbkb/git-command-returns-fatal-error-about-the-repository-being-owned-by-someone-else-1167744132.html
      # https://github.com/actions/runner-images/issues/6775
      # https://github.com/actions/checkout/issues/766
      - name: Mark the current working directory as a safe directory in git
        # run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
        run: git config --global --add safe.directory "${PWD}"

      - name: Install Ubuntu packages (standard set)
        if: ${{ inputs.os-dependencies == '' }}
        # bsdmainutils provides "column" which is used by the Makefile
        run: apt-get update && apt-get install -y --no-install-recommends make gcc bsdmainutils xz-utils

      - name: Install Ubuntu packages (custom set)
        if: ${{ inputs.os-dependencies != '' }}
        run: apt-get update && apt-get install -y --no-install-recommends ${{ inputs.os-dependencies }}

      # Try to install build dependencies using the depsinstall Makefile
      # recipe but allow this step to fail without failing the whole job if
      # the recipe is not yet implemented by a project's Makefile.
      - name: Install build dependencies (try)
        run: make depsinstall
        continue-on-error: true

      - name: Build using project Makefile
        run: make all
